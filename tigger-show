#! /bin/dash

# The tigger-show should print the contents of the specified filename 
#   as of the specified commit. 
# If commit is omitted, the contents of the file in the index should be printed.

if [ ! -d ".tigger" ]
then
    echo "tigger-show: error: tigger repository directory .tigger not found" 1>&2
    exit 1
fi 

currBranch="$(cat .tigger/HEAD)"
index=.tigger/branches/$currBranch/index
log=.tigger/branches/$currBranch/log


# Errors:

# 1. "usage: tigger-show <commit>:<filename>" >> multiple arguments | no arguments
case "$#" in
0) 
    echo "usage: tigger-show <commit>:<filename>"  
    exit 1
    ;;
1) 
    if ! echo "$1" | grep ':' >/dev/null
    then 
        echo "tigger-show: error: invalid object $1" 1>&2
        exit 1
    fi

    commit=$(echo "$1" | cut -d ':' -f1)
    fname=$(echo "$1" | cut -d ':' -f2)
    ;;
*)
    echo "usage: tigger-show <commit>:<filename>" 1>&2
    exit 1
    ;;
esac

# 2. "tigger-show: error: unknown commit '10'"
#   a. check if commit is omitted

# $1 - commit index
# $2 - fname
commit() {
    if [ ! -f "$index"/.commit$1/$2 ]
    then
        echo "tigger-show: error: '$2' not found in commit $1" 1>&2
        exit 1
    fi
    cat < "$index"/.commit"$1"/"$2"
}

# 3. "tigger-show: error: invalid filename ''"
# tigger-show: error: invalid object wowo
index() {
    if [ ! -f "$index"/$1 ]
    then
        echo "tigger-show: error: '$1' not found in index" 1>&2
        exit 1
    fi
    cat < "$index"/"$1"
}

if [ -z "$commit" ]
then
    # for arguments omitted commit, pass into index
    index "$fname"
else
    # check if commit can be found
    if ! cat < "$log" | cut -d' ' -f1 | grep -E "^$commit$" > /dev/null
    then
        echo "tigger-show: error: unknown commit '$commit'" 1>&2
        exit 1
    fi
    commit "$commit" "$fname"
fi
